// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: report.proto

package client

import (
	context "context"
	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/monitor/dashboard/report/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// DashboardReportService report.proto
	DashboardReportService() pb.DashboardReportServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		dashboardReportService: pb.NewDashboardReportServiceClient(cc),
	}
}

type serviceClients struct {
	dashboardReportService pb.DashboardReportServiceClient
}

func (c *serviceClients) DashboardReportService() pb.DashboardReportServiceClient {
	return c.dashboardReportService
}

type dashboardReportServiceWrapper struct {
	client pb.DashboardReportServiceClient
	opts   []grpc1.CallOption
}

func (s *dashboardReportServiceWrapper) ListOrgReportTasks(ctx context.Context, req *pb.ListOrgReportTasksRequest) (*pb.ListOrgReportTasksResponse, error) {
	return s.client.ListOrgReportTasks(ctx, req, s.opts...)
}

func (s *dashboardReportServiceWrapper) GetOrgReportTask(ctx context.Context, req *pb.IDOrgReportTaskRequest) (*pb.ReportTaskResponse, error) {
	return s.client.GetOrgReportTask(ctx, req, s.opts...)
}

func (s *dashboardReportServiceWrapper) CreatOrgReportTask(ctx context.Context, req *pb.CreatOrgReportTaskRequest) (*pb.StatusResponse, error) {
	return s.client.CreatOrgReportTask(ctx, req, s.opts...)
}

func (s *dashboardReportServiceWrapper) UpdateOrgReportTask(ctx context.Context, req *pb.UpdateOrgReportTaskRequest) (*pb.StatusResponse, error) {
	return s.client.UpdateOrgReportTask(ctx, req, s.opts...)
}

func (s *dashboardReportServiceWrapper) SwitchOrgReportTask(ctx context.Context, req *pb.SwitchOrgReportTaskRequest) (*pb.StatusResponse, error) {
	return s.client.SwitchOrgReportTask(ctx, req, s.opts...)
}

func (s *dashboardReportServiceWrapper) DelOrgReportTask(ctx context.Context, req *pb.IDOrgReportTaskRequest) (*pb.StatusResponse, error) {
	return s.client.DelOrgReportTask(ctx, req, s.opts...)
}
