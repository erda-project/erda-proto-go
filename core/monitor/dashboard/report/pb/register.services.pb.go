// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: report.proto

package pb

import (
	transport "github.com/erda-project/erda-infra/pkg/transport"
	reflect "reflect"
)

// RegisterDashboardReportServiceImp report.proto
func RegisterDashboardReportServiceImp(regester transport.Register, srv DashboardReportServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterDashboardReportServiceHandler(regester, DashboardReportServiceHandler(srv), _ops.HTTP...)
	RegisterDashboardReportServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.core.monitor.dashboard.report.DashboardReportService",
	)
}

var (
	dashboardReportServiceClientType  = reflect.TypeOf((*DashboardReportServiceClient)(nil)).Elem()
	dashboardReportServiceServerType  = reflect.TypeOf((*DashboardReportServiceServer)(nil)).Elem()
	dashboardReportServiceHandlerType = reflect.TypeOf((*DashboardReportServiceHandler)(nil)).Elem()
)

// DashboardReportServiceClientType .
func DashboardReportServiceClientType() reflect.Type { return dashboardReportServiceClientType }

// DashboardReportServiceServerType .
func DashboardReportServiceServerType() reflect.Type { return dashboardReportServiceServerType }

// DashboardReportServiceHandlerType .
func DashboardReportServiceHandlerType() reflect.Type { return dashboardReportServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		dashboardReportServiceClientType,
		// server types
		dashboardReportServiceServerType,
		// handler types
		dashboardReportServiceHandlerType,
	}
}
