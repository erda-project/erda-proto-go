// Code generated by protoc-gen-go-client. DO NOT EDIT.
// Sources: metric.proto

package client

import (
	context "context"
	grpc "github.com/erda-project/erda-infra/pkg/transport/grpc"
	pb "github.com/erda-project/erda-proto-go/core/monitor/metric/pb"
	grpc1 "google.golang.org/grpc"
)

// Client provide all service clients.
type Client interface {
	// MetricService metric.proto
	MetricService() pb.MetricServiceClient
}

// New create client
func New(cc grpc.ClientConnInterface) Client {
	return &serviceClients{
		metricService: pb.NewMetricServiceClient(cc),
	}
}

type serviceClients struct {
	metricService pb.MetricServiceClient
}

func (c *serviceClients) MetricService() pb.MetricServiceClient {
	return c.metricService
}

type metricServiceWrapper struct {
	client pb.MetricServiceClient
	opts   []grpc1.CallOption
}

func (s *metricServiceWrapper) Query(ctx context.Context, req *pb.QueryRequst) (*pb.QueryResponse, error) {
	return s.client.Query(ctx, req, s.opts...)
}
