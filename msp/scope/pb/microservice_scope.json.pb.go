// Code generated by protoc-gen-go-json. DO NOT EDIT.
// Source: microservice_scope.proto

package pb

import (
	bytes "bytes"
	json "encoding/json"
	jsonpb "github.com/erda-project/erda-infra/pkg/transport/http/encoding/jsonpb"
	protojson "google.golang.org/protobuf/encoding/protojson"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the "encoding/json" package it is being compiled against.
var _ json.Marshaler = (*EncryptMicroserviceScopeRequest)(nil)
var _ json.Unmarshaler = (*EncryptMicroserviceScopeRequest)(nil)
var _ json.Marshaler = (*EncryptMicroserviceScopeResponse)(nil)
var _ json.Unmarshaler = (*EncryptMicroserviceScopeResponse)(nil)
var _ json.Marshaler = (*DecryptMicroserviceScopeRequest)(nil)
var _ json.Unmarshaler = (*DecryptMicroserviceScopeRequest)(nil)
var _ json.Marshaler = (*DecryptMicroserviceScopeResponse)(nil)
var _ json.Unmarshaler = (*DecryptMicroserviceScopeResponse)(nil)
var _ json.Marshaler = (*Scope)(nil)
var _ json.Unmarshaler = (*Scope)(nil)

// EncryptMicroserviceScopeRequest implement json.Marshaler.
func (m *EncryptMicroserviceScopeRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// EncryptMicroserviceScopeRequest implement json.Marshaler.
func (m *EncryptMicroserviceScopeRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// EncryptMicroserviceScopeResponse implement json.Marshaler.
func (m *EncryptMicroserviceScopeResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// EncryptMicroserviceScopeResponse implement json.Marshaler.
func (m *EncryptMicroserviceScopeResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DecryptMicroserviceScopeRequest implement json.Marshaler.
func (m *DecryptMicroserviceScopeRequest) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DecryptMicroserviceScopeRequest implement json.Marshaler.
func (m *DecryptMicroserviceScopeRequest) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// DecryptMicroserviceScopeResponse implement json.Marshaler.
func (m *DecryptMicroserviceScopeResponse) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// DecryptMicroserviceScopeResponse implement json.Marshaler.
func (m *DecryptMicroserviceScopeResponse) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}

// Scope implement json.Marshaler.
func (m *Scope) MarshalJSON() ([]byte, error) {
	buf := &bytes.Buffer{}
	err := (&jsonpb.Marshaler{
		OrigName:     false,
		EnumsAsInts:  false,
		EmitDefaults: true,
	}).Marshal(buf, m)
	return buf.Bytes(), err
}

// Scope implement json.Marshaler.
func (m *Scope) UnmarshalJSON(b []byte) error {
	return (&protojson.UnmarshalOptions{
		DiscardUnknown: true,
	}).Unmarshal(b, m)
}
