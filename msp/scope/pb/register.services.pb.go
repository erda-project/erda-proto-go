// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: microservice_scope.proto

package pb

import (
	transport "github.com/erda-project/erda-infra/pkg/transport"
	reflect "reflect"
)

// RegisterMicroserviceScopeServiceImp microservice_scope.proto
func RegisterMicroserviceScopeServiceImp(regester transport.Register, srv MicroserviceScopeServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterMicroserviceScopeServiceHandler(regester, MicroserviceScopeServiceHandler(srv), _ops.HTTP...)
	RegisterMicroserviceScopeServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.msp.scope.MicroserviceScopeService",
	)
}

var (
	microserviceScopeServiceClientType  = reflect.TypeOf((*MicroserviceScopeServiceClient)(nil)).Elem()
	microserviceScopeServiceServerType  = reflect.TypeOf((*MicroserviceScopeServiceServer)(nil)).Elem()
	microserviceScopeServiceHandlerType = reflect.TypeOf((*MicroserviceScopeServiceHandler)(nil)).Elem()
)

// MicroserviceScopeServiceClientType .
func MicroserviceScopeServiceClientType() reflect.Type { return microserviceScopeServiceClientType }

// MicroserviceScopeServiceServerType .
func MicroserviceScopeServiceServerType() reflect.Type { return microserviceScopeServiceServerType }

// MicroserviceScopeServiceHandlerType .
func MicroserviceScopeServiceHandlerType() reflect.Type { return microserviceScopeServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		microserviceScopeServiceClientType,
		// server types
		microserviceScopeServiceServerType,
		// handler types
		microserviceScopeServiceHandlerType,
	}
}
