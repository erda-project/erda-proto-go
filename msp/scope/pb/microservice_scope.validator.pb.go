// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: microservice_scope.proto

package pb

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/protobuf/types/descriptorpb"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *EncryptMicroserviceScopeRequest) Validate() error {
	if this.Env == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Env", fmt.Errorf(`value '%v' must not be an empty string`, this.Env))
	}
	return nil
}
func (this *EncryptMicroserviceScopeResponse) Validate() error {
	if this.Scope != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Scope); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Scope", err)
		}
	}
	return nil
}
func (this *DecryptMicroserviceScopeRequest) Validate() error {
	if this.ScopeID == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ScopeID", fmt.Errorf(`value '%v' must not be an empty string`, this.ScopeID))
	}
	return nil
}
func (this *DecryptMicroserviceScopeResponse) Validate() error {
	if this.Scope != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Scope); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Scope", err)
		}
	}
	return nil
}
func (this *Scope) Validate() error {
	return nil
}
