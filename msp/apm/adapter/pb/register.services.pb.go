// Code generated by protoc-gen-go-register. DO NOT EDIT.
// Sources: adapter.proto

package pb

import (
	transport "github.com/erda-project/erda-infra/pkg/transport"
	reflect "reflect"
)

// RegisterAdapterServiceImp adapter.proto
func RegisterAdapterServiceImp(regester transport.Register, srv AdapterServiceServer, opts ...transport.ServiceOption) {
	_ops := transport.DefaultServiceOptions()
	for _, op := range opts {
		op(_ops)
	}
	RegisterAdapterServiceHandler(regester, AdapterServiceHandler(srv), _ops.HTTP...)
	RegisterAdapterServiceServer(regester, srv, _ops.GRPC...)
}

// ServiceNames return all service names
func ServiceNames(svr ...string) []string {
	return append(svr,
		"erda.msp.apm.adapter.AdapterService",
	)
}

var (
	adapterServiceClientType  = reflect.TypeOf((*AdapterServiceClient)(nil)).Elem()
	adapterServiceServerType  = reflect.TypeOf((*AdapterServiceServer)(nil)).Elem()
	adapterServiceHandlerType = reflect.TypeOf((*AdapterServiceHandler)(nil)).Elem()
)

// AdapterServiceClientType .
func AdapterServiceClientType() reflect.Type { return adapterServiceClientType }

// AdapterServiceServerType .
func AdapterServiceServerType() reflect.Type { return adapterServiceServerType }

// AdapterServiceHandlerType .
func AdapterServiceHandlerType() reflect.Type { return adapterServiceHandlerType }

func Types() []reflect.Type {
	return []reflect.Type{
		// client types
		adapterServiceClientType,
		// server types
		adapterServiceServerType,
		// handler types
		adapterServiceHandlerType,
	}
}
